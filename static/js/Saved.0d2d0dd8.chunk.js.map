{"version":3,"file":"static/js/Saved.0d2d0dd8.chunk.js","mappings":"gPAcMA,EAAwB,SAAH,GAAyB,IAAnBC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MACrC,EAA8BC,EAAAA,SAAuC,MAAK,eAAnEC,EAAO,KAAEC,EAAU,KACpBC,GAAWC,EAAAA,EAAAA,KAUjB,OATAJ,EAAAA,WAAgB,WACdK,EAAAA,EAAAA,IACO,qDAAD,OACmDP,EAAI,yDAE1DQ,MAAK,SAACC,GACLL,EAAWK,EAASC,KACtB,GACJ,GAAG,KAED,iBAAKC,UAAU,sLAAqL,WAClM,iBAAKA,UAAU,oCAAmC,WAChD,kBAAMA,UAAU,oBAAmB,UAChCV,EAAQ,EAAC,KAAW,OAAPE,QAAO,IAAPA,OAAO,EAAPA,EAASH,KAAI,KAAW,OAAPG,QAAO,IAAPA,OAAO,EAAPA,EAASS,IAAIC,YAE9C,gBACEF,UAAU,OACVG,KAAKC,EAAAA,EAAAA,GAAe,OAAPZ,QAAO,IAAPA,GAAAA,EAASA,QAAQ,GAAGa,GAAY,OAAPb,QAAO,IAAPA,OAAO,EAAPA,EAASA,QAAQ,GAAGa,GAAK,KAC/DC,IAAI,SAGR,kBAAMN,UAAU,OAAM,WACpB,iBAAMA,UAAU,gBAAe,0BAAqB,IACnDO,KAAKC,KAAY,OAAPhB,QAAO,IAAPA,OAAO,EAAPA,EAASiB,KAAKC,MAAe,YAE1C,kBAAMV,UAAU,OAAM,WACpB,iBAAMA,UAAU,gBAAe,oBACvB,OAAPR,QAAO,IAAPA,OAAO,EAAPA,EAASA,QAAQ,GAAGiB,SAEvB,kBAAMT,UAAU,OAAM,WACpB,iBAAMA,UAAU,gBAAe,wBACvB,OAAPR,QAAO,IAAPA,OAAO,EAAPA,EAASiB,KAAKE,SAAQ,QAEzB,kBAAMX,UAAU,OAAM,WACpB,iBAAMA,UAAU,gBAAe,0BAC9BO,KAAKC,KAAY,OAAPhB,QAAO,IAAPA,GAAAA,EAASiB,KAAKG,WAAoB,OAAPpB,QAAO,IAAPA,OAAO,EAAPA,EAASiB,KAAKG,WAAa,GAAE,YAErE,iBAAKZ,UAAU,uBAAsB,WACnC,eACEA,UAAU,uPAEVa,OAAO,SACPC,KAAI,iDAAmD,OAAPtB,QAAO,IAAPA,OAAO,EAAPA,EAASH,MAAO,WAEhE,SAAC,MAAqB,CAACW,UAAU,aAAY,gBAI/C,mBACEA,UAAU,4NAGVe,QAAS,WACPrB,GAASsB,EAAAA,EAAAA,GAAkB,OAAPxB,QAAO,IAAPA,OAAO,EAAPA,EAASH,MAC/B,EAAE,UAEF,SAAC4B,EAAA,EAAO,CAACzB,QAASA,WAK5B,ECvDA,EAfgC,SAAH,GAAmB,IAAb0B,EAAK,EAALA,MACzBC,GAAiBC,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMC,KAAK,IAAtDH,aACR,OACE,iBAAMnB,UAAWkB,EAAQ,OAAS,GAAG,UACnC,iBAAKlB,UAAU,oHAAmH,UACvG,IAAxBmB,EAAaI,QAAe,eAAIvB,UAAU,qBAAoB,8CAAyC,GAEvGmB,EAAaK,KAAI,SAAChC,EAASiC,GAC1B,OAAO,SAACrC,EAAI,CAACE,MAAOmC,EAAsBpC,KAAMG,EAAQH,MAA5BG,EAAQH,KACtC,QAIR,C","sources":["components/Cart.tsx","pages/Saved.tsx"],"sourcesContent":["import axios from 'axios';\r\nimport React from 'react';\r\nimport getIcon from '../helpers/getIcon';\r\nimport { useAppDispatch } from '../hooks/hooks';\r\nimport { addWeather } from '../store/slices/savedSlice';\r\nimport { WeatherResponse } from '../types';\r\nimport { IsSaved } from './IsSaved';\r\nimport { HiOutlineExternalLink } from 'react-icons/hi';\r\n\r\ntype ICart = {\r\n  name: string;\r\n  index: number;\r\n};\r\n\r\nconst Cart: React.FC<ICart> = ({ name, index }) => {\r\n  const [weather, setWeather] = React.useState<WeatherResponse | null>(null);\r\n  const dispatch = useAppDispatch();\r\n  React.useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${name}&units=metric&appid=20c4bd51cf84f12ebda1a2d7f69862bc`\r\n      )\r\n      .then((response) => {\r\n        setWeather(response.data as WeatherResponse);\r\n      });\r\n  }, []);\r\n  return (\r\n    <div className='w-[360px] h-[250px] sm:w-[500px] text-gray-800 bg-[#fefefe]  rounded-md p-3 flex flex-col shadow-md border-2 border-gray-400 dark:bg-[#1F2937] dark:text-white dark:border-gray-600'>\r\n      <div className='flex justify-between items-center'>\r\n        <span className='font-bold text-lg'>\r\n          {index + 1}. {weather?.name}, {weather?.sys.country}\r\n        </span>\r\n        <img\r\n          className='h-14'\r\n          src={getIcon(weather?.weather[0].id ? weather?.weather[0].id : 800)}\r\n          alt=''\r\n        />\r\n      </div>\r\n      <span className='mb-1'>\r\n        <span className='font-semibold'>Temperature:</span>{' '}\r\n        {Math.ceil(weather?.main.temp as number)}°C\r\n      </span>\r\n      <span className='mb-1'>\r\n        <span className='font-semibold'>Info: </span>\r\n        {weather?.weather[0].main}\r\n      </span>\r\n      <span className='mb-1'>\r\n        <span className='font-semibold'>Humidity: </span>\r\n        {weather?.main.humidity}%\r\n      </span>\r\n      <span className='mb-4'>\r\n        <span className='font-semibold'>Feels Like: </span>\r\n        {Math.ceil(weather?.main.feels_like ? weather?.main.feels_like : 0)}°C\r\n      </span>\r\n      <div className='flex justify-between'>\r\n        <a\r\n          className='dark:text-white bg-gray-200 hover:bg-gray-300 text-gray-700 dark:hover:bg-[#0e48c5]\r\n            dark:bg-[#1956db] transition-all focus:ring-2 focus:ring-gray-400 font-medium rounded px-3 lg:px-4 py-1.5 lg:py-2 focus:outline-none text-sm flex items-center'\r\n          target='_blank'\r\n          href={`https://www.google.se/search?q=weather+${weather?.name}`}\r\n        >\r\n          <HiOutlineExternalLink className='mr-2 h-4'/>\r\n          More info\r\n        </a>\r\n\r\n        <button\r\n          className='\r\n            dark:text-white bg-gray-200 hover:bg-gray-300 text-gray-700 dark:hover:bg-[#0e48c5]\r\n            dark:bg-[#1956db] transition-all focus:ring-2 focus:ring-gray-400 rounded px-3 lg:px-4 py-1.5 lg:py-2 focus:outline-none text-sm'\r\n          onClick={() => {\r\n            dispatch(addWeather(weather?.name as string));\r\n          }}\r\n        >\r\n          <IsSaved weather={weather} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Cart };\r\n","import React from 'react';\r\nimport { Cart } from '../components/Cart';\r\nimport { useAppSelector } from '../hooks/hooks';\r\n\r\ntype ISaved = {\r\n  theme: boolean;\r\n};\r\n\r\nconst Saved: React.FC<ISaved> = ({ theme }) => {\r\n  const { savedWeather } = useAppSelector((state) => state.saved);\r\n  return (\r\n    <main className={theme ? 'dark' : ''}>\r\n      <div className='text-gray-700 dark:text-gray-100  max-w-screen-xl mx-auto px-4 lg:px-6 flex flex-col items-center py-10 space-y-4'>\r\n        {savedWeather.length === 0 ? <h2 className='font-medim text-lg'>You don't have favourite weather</h2> : ''}\r\n\r\n        {savedWeather.map((weather, i) => {\r\n          return <Cart index={i} key={weather.name} name={weather.name} />;\r\n        })}\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Saved;\r\n"],"names":["Cart","name","index","React","weather","setWeather","dispatch","useAppDispatch","axios","then","response","data","className","sys","country","src","getIcon","id","alt","Math","ceil","main","temp","humidity","feels_like","target","href","onClick","addWeather","IsSaved","theme","savedWeather","useAppSelector","state","saved","length","map","i"],"sourceRoot":""}